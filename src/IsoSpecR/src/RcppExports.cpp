// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// Rinterface
NumericMatrix Rinterface(const IntegerVector& molecule, const DataFrame& isotopes, double stopCondition, int algo, int tabSize, int hashSize, double step, bool showCounts, bool trim, double charge);
RcppExport SEXP _IsoSpecR_Rinterface(SEXP moleculeSEXP, SEXP isotopesSEXP, SEXP stopConditionSEXP, SEXP algoSEXP, SEXP tabSizeSEXP, SEXP hashSizeSEXP, SEXP stepSEXP, SEXP showCountsSEXP, SEXP trimSEXP, SEXP chargeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerVector& >::type molecule(moleculeSEXP);
    Rcpp::traits::input_parameter< const DataFrame& >::type isotopes(isotopesSEXP);
    Rcpp::traits::input_parameter< double >::type stopCondition(stopConditionSEXP);
    Rcpp::traits::input_parameter< int >::type algo(algoSEXP);
    Rcpp::traits::input_parameter< int >::type tabSize(tabSizeSEXP);
    Rcpp::traits::input_parameter< int >::type hashSize(hashSizeSEXP);
    Rcpp::traits::input_parameter< double >::type step(stepSEXP);
    Rcpp::traits::input_parameter< bool >::type showCounts(showCountsSEXP);
    Rcpp::traits::input_parameter< bool >::type trim(trimSEXP);
    Rcpp::traits::input_parameter< double >::type charge(chargeSEXP);
    rcpp_result_gen = Rcpp::wrap(Rinterface(molecule, isotopes, stopCondition, algo, tabSize, hashSize, step, showCounts, trim, charge));
    return rcpp_result_gen;
END_RCPP
}
